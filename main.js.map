{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/components/api.js","webpack://mesto-project-ff/./src/scripts/components/card.js","webpack://mesto-project-ff/./src/scripts/components/modal.js","webpack://mesto-project-ff/./src/scripts/components/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// Конфигурация пользователя\r\nconst config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-24\",\r\n  headers: {\r\n    authorization: \"a60c934d-c4f1-48bc-9c8f-41700db42dbf\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n// Проверка статуса запроса серверу\r\nfunction handleResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  } else {\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n}\r\n\r\n// Получение профиля пользователя\r\nexport function getUserProfile() {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then((res) => handleResponse(res));\r\n}\r\n\r\n// Редактирование профиля пользователя\r\nexport function editUserProfile(name, about) {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, about }),\r\n  }).then((res) => handleResponse(res));\r\n}\r\n\r\n// Редактирование аватара пользователя\r\nexport function editUserAvatar(avatar) {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar }),\r\n  }).then((res) => handleResponse(res));\r\n}\r\n\r\n// Получение массива карточек\r\nexport function getInitialCards() {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then((res) => handleResponse(res));\r\n}\r\n\r\n// Добавление новой карточки\r\nexport function addNewCard(name, link) {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, link }),\r\n  }).then((res) => handleResponse(res));\r\n}\r\n\r\n// Удаление карточки\r\nexport function removeCard(id) {\r\n  return fetch(`${config.baseUrl}/cards/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then((res) => handleResponse(res));\r\n}\r\n\r\n// Добавление лайка карточке\r\nexport function addLike(id) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then((res) => handleResponse(res));\r\n}\r\n\r\n// Удаление лайка у карточки\r\nexport function removeLike(id) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then((res) => handleResponse(res));\r\n}\r\n","import { addLike, removeLike } from \"./api.js\";\r\n\r\n//Темплейт карточки\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n//Функция создания карточки\r\nexport function createCard(cardData, userID, deleteCard, likeCard, zoomCard) {\r\n  const currentCard = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n\r\n  const cardImage = currentCard.querySelector(\".card__image\");\r\n  const cardTitle = currentCard.querySelector(\".card__title\");\r\n  const cardDeleteButton = currentCard.querySelector(\".card__delete-button\");\r\n  const cardLikeButton = currentCard.querySelector(\".card__like-button\");\r\n  const likeCount = currentCard.querySelector(\".card__like-counts\");\r\n\r\n  cardTitle.textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  likeCount.textContent = cardData.likes.length;\r\n\r\n  if (cardData.owner._id == userID) {\r\n    cardDeleteButton.addEventListener(\"click\", () => {\r\n      deleteCard(currentCard, cardData._id);\r\n    });\r\n  } else {\r\n    cardDeleteButton.setAttribute(\"style\", `display: none;`);\r\n  }\r\n\r\n  if (\r\n    cardData.likes.some((likedUser) => {\r\n      likedUser._id == userID;\r\n    })\r\n  ) {\r\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  cardLikeButton.addEventListener(\"click\", (event) =>\r\n    likeCard(event, likeCount, cardData._id)\r\n  );\r\n  cardImage.addEventListener(\"click\", () =>\r\n    zoomCard(cardData.link, cardData.name)\r\n  );\r\n\r\n  return currentCard;\r\n}\r\n\r\n//Функция удаления карточки\r\nexport function deleteCard(card) {\r\n  card.remove();\r\n}\r\n\r\n//Функция лайка карточки\r\nexport function likeCard(event, likeCount, cardId) {\r\n  if (event.target.classList.contains(\"card__like-button_is-active\")) {\r\n    removeLike(cardId)\r\n      .then((card) => {\r\n        event.target.classList.remove(\"card__like-button_is-active\");\r\n        likeCount.textContent = card.likes.length;        \r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка: ${err}`);\r\n      });\r\n  } else {\r\n    addLike(cardId)\r\n      .then((card) => {\r\n        event.target.classList.add(\"card__like-button_is-active\");\r\n        likeCount.textContent = card.likes.length;        \r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка: ${err}`);\r\n      });\r\n  }\r\n}\r\n","// @todo: Функция открытия модального окна\r\nexport function openModal(popup) {\r\n  popup.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", closeModalEsc);\r\n  document.addEventListener(\"click\", closeModalOverlay);\r\n  popup\r\n    .querySelector(\".popup__close\")\r\n    .addEventListener(\"click\", closeModalCloseButton);\r\n}\r\n\r\n// @todo: Функция закрытия модального окна\r\nexport function closeModal(popup) {\r\n  popup.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeModalEsc);\r\n  document.removeEventListener(\"click\", closeModalOverlay);\r\n  popup \r\n    .querySelector(\".popup__close\") \r\n    .removeEventListener(\"click\", closeModalCloseButton); \r\n}\r\n\r\n// @todo: Функция закрытия модального окна по кнопке Esc\r\nfunction closeModalEsc(event) {\r\n  if (event.key === \"Escape\") {\r\n    closeModal(document.querySelector(\".popup_is-opened\"));\r\n  }\r\n}\r\n\r\n// @todo: Функция закрытия модального окна по крестику в модальном окне\r\nfunction closeModalCloseButton(event) {\r\n  closeModal(event.target.closest(\".popup\"));\r\n}\r\n\r\n// @todo: Функция закрытия модального окна по оверлею\r\nfunction closeModalOverlay(event) {\r\n  const { target } = event;\r\n\r\n  if (target.classList.contains(\"popup\")) {\r\n    closeModal(target);\r\n  }\r\n}\r\n","// Показать ошибку ввода\r\nfunction showInputError(\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  validationConfig\r\n) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClas);\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n  errorElement.textContent = errorMessage;\r\n}\r\n\r\n// Скрыть ошибку ввода\r\nfunction hideInputError(formElement, inputElement, validationConfig) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClas);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = \"\";\r\n  inputElement.setCustomValidity(\"\");\r\n}\r\n\r\n// Проверка на валидность полей\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n}\r\n\r\nfunction checkInputValidity(formElement, inputElement, validationConfig) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      validationConfig\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n}\r\n\r\n// Изменение кнопки от статуса валидности\r\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n}\r\n\r\n// Прослушивание событий\r\nfunction setEventListeners(formElement, validationConfig) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}\r\n\r\n// Включение валидации\r\nexport function enableValidation(validationConfig) {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationConfig.formSelector)\r\n  );\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n}\r\n\r\n// Очистка ошибок валидации\r\nexport function clearValidation(formElement, validationConfig) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  });\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n}\r\n","import \"../pages/index.css\";\r\nimport { createCard, deleteCard, likeCard } from \"./components/card.js\";\r\nimport { openModal, closeModal } from \"./components/modal.js\";\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\nimport {\r\n  getInitialCards,\r\n  getUserProfile,\r\n  editUserAvatar,\r\n  editUserProfile,\r\n  addNewCard,\r\n  removeCard,\r\n} from \"./components/api.js\";\r\n\r\n// Конфигурация валидации\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nenableValidation(validationConfig);\r\n\r\n// @todo: DOM узлы\r\n\r\nconst userData = {\r\n  userName: document.querySelector(\".profile__title\"),\r\n  userAbout: document.querySelector(\".profile__description\"),\r\n  userAvatar: document.querySelector(\".profile__image\"),\r\n};\r\n\r\nconst promises = [getUserProfile(), getInitialCards()];\r\n\r\nconst cardList = document.querySelector(\".places__list\");\r\n\r\nconst profile = document.querySelector(\".profile\");\r\nconst profileTitle = profile.querySelector(\".profile__title\");\r\nconst profileDescription = profile.querySelector(\".profile__description\");\r\nconst addProfileButton = profile.querySelector(\".profile__add-button\");\r\nconst editProfileButton = profile.querySelector(\".profile__edit-button\");\r\nconst popupEditProfile = document.querySelector(\".popup_type_edit\");\r\nconst popupTypeAvatar = document.querySelector(\".popup_type_edit-avatar\");\r\nconst inputPopupName = popupEditProfile.querySelector(\r\n  \".popup__input_type_name\"\r\n);\r\nconst inputPopupDescription = popupEditProfile.querySelector(\r\n  \".popup__input_type_description\"\r\n);\r\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst formNewCard = popupNewCard.querySelector(\".popup__form\");\r\nconst inputCardName = formNewCard.querySelector(\".popup__input_type_card-name\");\r\nconst inputCardUrl = formNewCard.querySelector(\".popup__input_type_url\");\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst popupImage = popupTypeImage.querySelector(\".popup__image\");\r\nconst popupCaption = popupTypeImage.querySelector(\".popup__caption\");\r\nconst inputUserAvatar = popupTypeAvatar.querySelector(\r\n  \".popup__input_type_avatar\"\r\n);\r\nconst formUserAvatar = popupTypeAvatar.querySelector(\".popup__form\");\r\nconst userAvatar = profile.querySelector(\".profile__image\");\r\n\r\n// Функция загрузки пользователя\r\nfunction renderProfile(user, userData) {\r\n  userData.userName.textContent = user.name;\r\n  userData.userAbout.textContent = user.about;\r\n  userData.userAvatar.setAttribute(\r\n    \"style\",\r\n    `background-image: usrl(${user.avatar});`\r\n  );\r\n}\r\n\r\n// Функция прорисовки загрузки\r\nfunction renderLoading(isLoading, element) {\r\n  if (isLoading) {\r\n    element.textContent = \"Сохранение...\";\r\n  } else {\r\n    element.textContent = \"Сохранить\";\r\n  }\r\n}\r\n\r\n// Функция увелечения карточки\r\nfunction zoomCard(url, name) {\r\n  popupCaption.textContent = name;\r\n  popupImage.src = url;\r\n  popupImage.alt = name;\r\n\r\n  openModal(popupTypeImage);\r\n}\r\n\r\n// Функция открытия модального окна с карточкой\r\nfunction openModalNewCard() {\r\n  openModal(popupNewCard);\r\n  formNewCard.reset();\r\n  clearValidation(popupNewCard, validationConfig);\r\n}\r\n\r\n// Функция удаления карточки\r\nfunction eraseCard(card, cardId) {\r\n  removeCard(cardId)\r\n    .then(() => {\r\n      deleteCard(card);\r\n    })\r\n    .catch((err) => {\r\n      console.log(`Ошибка: ${err}`);\r\n    });\r\n}\r\n\r\n// Функция открытия модального окна с редактированием профиля\r\nfunction openModalEditProfile() {\r\n  inputPopupName.value = profileTitle.textContent;\r\n  inputPopupDescription.value = profileDescription.textContent;\r\n\r\n  clearValidation(popupEditProfile, validationConfig);\r\n\r\n  openModal(popupEditProfile);\r\n}\r\n\r\n// Функция сохранения профиля по кнопке \"Сохранить\"\r\nfunction submitProfileEdit(event) {\r\n  event.preventDefault();\r\n\r\n  const loadingButtonStatus = event.target.querySelector(\".popup__button\");\r\n\r\n  renderLoading(true, loadingButtonStatus);\r\n\r\n  editUserProfile(inputPopupName.value, inputPopupDescription.value)\r\n    .then((user) => {\r\n      editUserProfile(user.name, user.about);\r\n      closeModal(popupEditProfile);\r\n    })\r\n    .catch((err) => {\r\n      console.log(`Ошибка: ${err}`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, loadingButtonStatus);\r\n    });\r\n}\r\n\r\n// Функция создания новой карточки по кнопке \"Сохранить\"\r\nfunction submitNewCard(event) {\r\n  event.preventDefault();\r\n\r\n  const loadingButtonStatus = event.target.querySelector(\".popup__button\");\r\n\r\n  renderLoading(true, loadingButtonStatus);\r\n\r\n  addNewCard(inputCardName.value, inputCardUrl.value)\r\n    .then((card) => {\r\n      const newCard = createCard(\r\n        card,\r\n        card.owner._id,\r\n        eraseCard,\r\n        likeCard,\r\n        zoomCard\r\n      );\r\n      cardList.prepend(newCard);\r\n      closeModal(popupNewCard);\r\n      formNewCard.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.log(`Ошибка: ${err}`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, loadingButtonStatus);\r\n    });\r\n}\r\n\r\n// Функция открытия модального окна с изменением аватара пользователя\r\nfunction openModalEditUserAvatar() {\r\n  openModal(popupTypeAvatar);\r\n  formUserAvatar.reset();\r\n  clearValidation(popupTypeAvatar, validationConfig);\r\n}\r\n\r\n// Функция изменения аватара пользователя по кнопке \"Сохранить\"\r\nfunction submitUserAvatar(event) {\r\n  event.preventDefault();\r\n\r\n  const avatarUrl = inputUserAvatar.value;\r\n  const loadingButtonStatus = event.target.querySelector(\".popup__button\");\r\n\r\n  userAvatar.setAttribute(\"style\", `background-image: url(${avatarUrl});`);\r\n\r\n  renderLoading(true, loadingButtonStatus);\r\n\r\n  editUserAvatar(avatarUrl)\r\n    .then((user) => {\r\n      editUserAvatar(user.avatar);\r\n      closeModal(popupTypeAvatar);\r\n      formUserAvatar.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.log(`Ошибка: ${err}`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, loadingButtonStatus);\r\n    });\r\n}\r\n\r\n// Функция добавления карточки в массив карточек\r\nfunction addCard(card) {\r\n  cardList.append(card);\r\n}\r\n\r\n// Вывод данных пользователя и карточек с сервера\r\nPromise.all(promises)\r\n  .then((element) => {\r\n    renderProfile(element[0], userData);\r\n    element[1].forEach((elem) => {\r\n      addCard(createCard(elem, element[0]._id, eraseCard, likeCard, zoomCard));\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(`Ошибка: ${err}`);\r\n  });\r\n\r\n// Открытие модального окна редактирования профиля и добавления новых карточек по клику\r\neditProfileButton.addEventListener(\"click\", openModalEditProfile);\r\naddProfileButton.addEventListener(\"click\", openModalNewCard);\r\nuserAvatar.addEventListener(\"click\", openModalEditUserAvatar);\r\n\r\n// Обработка кнопки \"Сохранить\" модального окна\r\npopupEditProfile.addEventListener(\"submit\", submitProfileEdit);\r\npopupNewCard.addEventListener(\"submit\", submitNewCard);\r\npopupTypeAvatar.addEventListener(\"submit\", submitUserAvatar);\r\n"],"names":["config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","editUserProfile","name","about","fetch","method","body","JSON","stringify","then","editUserAvatar","avatar","cardTemplate","document","querySelector","content","createCard","cardData","userID","deleteCard","likeCard","zoomCard","currentCard","cloneNode","cardImage","cardTitle","cardDeleteButton","cardLikeButton","likeCount","textContent","src","link","alt","likes","length","owner","_id","addEventListener","setAttribute","some","likedUser","classList","add","event","cardId","id","target","contains","card","remove","catch","err","console","log","addLike","openModal","popup","closeModalEsc","closeModalOverlay","closeModalCloseButton","closeModal","removeEventListener","key","closest","hideInputError","formElement","inputElement","validationConfig","errorElement","inputErrorClas","errorClass","setCustomValidity","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","formSelector","inputErrorClass","patternMismatch","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","userData","userName","userAbout","userAvatar","promises","cardList","profile","profileTitle","profileDescription","addProfileButton","editProfileButton","popupEditProfile","popupTypeAvatar","inputPopupName","inputPopupDescription","popupNewCard","formNewCard","inputCardName","inputCardUrl","popupTypeImage","popupImage","popupCaption","inputUserAvatar","formUserAvatar","renderLoading","isLoading","element","url","eraseCard","all","user","renderProfile","elem","append","value","reset","preventDefault","loadingButtonStatus","finally","newCard","prepend","avatarUrl"],"sourceRoot":""}