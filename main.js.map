{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/components/api.js","webpack://mesto-project-ff/./src/scripts/components/card.js","webpack://mesto-project-ff/./src/scripts/components/modal.js","webpack://mesto-project-ff/./src/scripts/components/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// Конфигурация пользователя\nconst config = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-24\",\n  headers: {\n    authorization: \"a60c934d-c4f1-48bc-9c8f-41700db42dbf\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\n// Проверка статуса запроса серверу\nfunction handleResponse(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\n// Получение профиля пользователя\nexport function getUserProfile() {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n  }).then((res) => handleResponse(res));\n}\n\n// Редактирование профиля пользователя\nexport function editUserProfile(name, about) {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({ name, about }),\n  }).then((res) => handleResponse(res));\n}\n\n// Редактирование аватара пользователя\nexport function editUserAvatar(avatar) {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({ avatar }),\n  }).then((res) => handleResponse(res));\n}\n\n// Получение массива карточек\nexport function getInitialCards() {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n  }).then((res) => handleResponse(res));\n}\n\n// Добавление новой карточки\nexport function addNewCard(name, link) {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({ name, link }),\n  }).then((res) => handleResponse(res));\n}\n\n// Удаление карточки\nexport function removeCard(id) {\n  return fetch(`${config.baseUrl}/cards/${id}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then((res) => handleResponse(res));\n}\n\n// Добавление лайка карточке\nexport function addLike(id) {\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\n    method: \"PUT\",\n    headers: config.headers,\n  }).then((res) => handleResponse(res));\n}\n\n// Удаление лайка у карточки\nexport function removeLike(id) {\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then((res) => handleResponse(res));\n}\n","import { addLike, removeLike } from \"./api.js\";\n\n//Темплейт карточки\nconst cardTemplate = document.querySelector(\"#card-template\").content;\n\n//Функция создания карточки\nexport function createCard(cardData, userID, deleteCard, likeCard, zoomCard) {\n  const currentCard = cardTemplate.querySelector(\".card\").cloneNode(true);\n\n  const cardImage = currentCard.querySelector(\".card__image\");\n  const cardTitle = currentCard.querySelector(\".card__title\");\n  const cardDeleteButton = currentCard.querySelector(\".card__delete-button\");\n  const cardLikeButton = currentCard.querySelector(\".card__like-button\");\n  const likeCount = currentCard.querySelector(\".card__like-counts\");\n\n  cardTitle.textContent = cardData.name;\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n  likeCount.textContent = cardData.likes.length;\n\n  if (cardData.owner._id == userID) {\n    cardDeleteButton.addEventListener(\"click\", () => {\n      deleteCard(currentCard, cardData._id);\n    });\n  } else {\n    cardDeleteButton.setAttribute(\"style\", `display: none;`);\n  }\n\n  if (\n    cardData.likes.some((likedUser) => {\n      likedUser._id == userID;\n    })\n  ) {\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  cardLikeButton.addEventListener(\"click\", (event) =>\n    likeCard(event, likeCount, cardData._id)\n  );\n  cardImage.addEventListener(\"click\", () =>\n    zoomCard(cardData.link, cardData.name)\n  );\n\n  return currentCard;\n}\n\n//Функция удаления карточки\nexport function deleteCard(card) {\n  card.remove();\n}\n\n//Функция лайка карточки\nexport function likeCard(event, likeCount, cardId) {\n  const likeMethod = event.target.classList.contains(\n    \"card__like-button_is-active\"\n  )\n    ? removeLike\n    : addLike;\n  likeMethod(cardId)\n    .then((card) => {\n      event.target.classList.toggle(\"card__like-button_is-active\");\n      likeCount.textContent = card.likes.length;\n    })\n    .catch((err) => console.log(err));\n}\n","// @todo: Функция открытия модального окна\nexport function openModal(popup) {\n  popup.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closeModalEsc);\n  document.addEventListener(\"click\", closeModalOverlay);\n  popup\n    .querySelector(\".popup__close\")\n    .addEventListener(\"click\", closeModalCloseButton);\n}\n\n// @todo: Функция закрытия модального окна\nexport function closeModal(popup) {\n  popup.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closeModalEsc);\n  document.removeEventListener(\"click\", closeModalOverlay);\n  popup \n    .querySelector(\".popup__close\") \n    .removeEventListener(\"click\", closeModalCloseButton); \n}\n\n// @todo: Функция закрытия модального окна по кнопке Esc\nfunction closeModalEsc(event) {\n  if (event.key === \"Escape\") {\n    closeModal(document.querySelector(\".popup_is-opened\"));\n  }\n}\n\n// @todo: Функция закрытия модального окна по крестику в модальном окне\nfunction closeModalCloseButton(event) {\n  closeModal(event.target.closest(\".popup\"));\n}\n\n// @todo: Функция закрытия модального окна по оверлею\nfunction closeModalOverlay(event) {\n  const { target } = event;\n\n  if (target.classList.contains(\"popup\")) {\n    closeModal(target);\n  }\n}\n","// Показать ошибку ввода\nfunction showInputError(\n  formElement,\n  inputElement,\n  errorMessage,\n  validationConfig\n) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(validationConfig.inputErrorClas);\n  errorElement.classList.add(validationConfig.errorClass);\n  errorElement.textContent = errorMessage;\n}\n\n// Скрыть ошибку ввода\nfunction hideInputError(formElement, inputElement, validationConfig) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(validationConfig.inputErrorClas);\n  errorElement.classList.remove(validationConfig.errorClass);\n  errorElement.textContent = \"\";\n  inputElement.setCustomValidity(\"\");\n}\n\n// Проверка на валидность полей\nfunction hasInvalidInput(inputList) {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n}\n\nfunction checkInputValidity(formElement, inputElement, validationConfig) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(\n      formElement,\n      inputElement,\n      inputElement.validationMessage,\n      validationConfig\n    );\n  } else {\n    hideInputError(formElement, inputElement, validationConfig);\n  }\n}\n\n// Изменение кнопки от статуса валидности\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n  }\n}\n\n// Прослушивание событий\nfunction setEventListeners(formElement, validationConfig) {\n  const inputList = Array.from(\n    formElement.querySelectorAll(validationConfig.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(\n    validationConfig.submitButtonSelector\n  );\n  toggleButtonState(inputList, buttonElement, validationConfig);\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", function () {\n      checkInputValidity(formElement, inputElement, validationConfig);\n      toggleButtonState(inputList, buttonElement, validationConfig);\n    });\n  });\n}\n\n// Включение валидации\nexport function enableValidation(validationConfig) {\n  const formList = Array.from(\n    document.querySelectorAll(validationConfig.formSelector)\n  );\n  formList.forEach((formElement) => {\n    setEventListeners(formElement, validationConfig);\n  });\n}\n\n// Очистка ошибок валидации\nexport function clearValidation(formElement, validationConfig) {\n  const inputList = Array.from(\n    formElement.querySelectorAll(validationConfig.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(\n    validationConfig.submitButtonSelector\n  );\n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, validationConfig);\n  });\n  toggleButtonState(inputList, buttonElement, validationConfig);\n}\n","import \"../pages/index.css\";\nimport { createCard, deleteCard, likeCard } from \"./components/card.js\";\nimport { openModal, closeModal } from \"./components/modal.js\";\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\nimport {\n  getInitialCards,\n  getUserProfile,\n  editUserAvatar,\n  editUserProfile,\n  addNewCard,\n  removeCard,\n} from \"./components/api.js\";\n\n// Конфигурация валидации\nconst validationConfig = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\",\n};\n\nenableValidation(validationConfig);\n\n// @todo: DOM узлы\n\nconst userData = {\n  userName: document.querySelector(\".profile__title\"),\n  userAbout: document.querySelector(\".profile__description\"),\n  userAvatar: document.querySelector(\".profile__image\"),\n};\n\nconst promises = [getUserProfile(), getInitialCards()];\n\nconst cardList = document.querySelector(\".places__list\");\n\nconst profile = document.querySelector(\".profile\");\nconst profileTitle = profile.querySelector(\".profile__title\");\nconst profileDescription = profile.querySelector(\".profile__description\");\nconst addProfileButton = profile.querySelector(\".profile__add-button\");\nconst editProfileButton = profile.querySelector(\".profile__edit-button\");\nconst popupEditProfile = document.querySelector(\".popup_type_edit\");\nconst popupTypeAvatar = document.querySelector(\".popup_type_edit-avatar\");\nconst inputPopupName = popupEditProfile.querySelector(\n  \".popup__input_type_name\"\n);\nconst inputPopupDescription = popupEditProfile.querySelector(\n  \".popup__input_type_description\"\n);\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\nconst formNewCard = popupNewCard.querySelector(\".popup__form\");\nconst inputCardName = formNewCard.querySelector(\".popup__input_type_card-name\");\nconst inputCardUrl = formNewCard.querySelector(\".popup__input_type_url\");\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\nconst popupImage = popupTypeImage.querySelector(\".popup__image\");\nconst popupCaption = popupTypeImage.querySelector(\".popup__caption\");\nconst inputUserAvatar = popupTypeAvatar.querySelector(\n  \".popup__input_type_avatar\"\n);\nconst formUserAvatar = popupTypeAvatar.querySelector(\".popup__form\");\nconst userAvatar = profile.querySelector(\".profile__image\");\n\n// Функция загрузки пользователя\nfunction renderProfile(user, userData) {\n  userData.userName.textContent = user.name;\n  userData.userAbout.textContent = user.about;\n  userData.userAvatar.setAttribute(\n    \"style\",\n    `background-image: url(${user.avatar});`\n  );\n}\n\n// Функция прорисовки загрузки\nfunction renderLoading(isLoading, element) {\n  if (isLoading) {\n    element.textContent = \"Сохранение...\";\n  } else {\n    element.textContent = \"Сохранить\";\n  }\n}\n\n// Функция увелечения карточки\nfunction zoomCard(url, name) {\n  popupCaption.textContent = name;\n  popupImage.src = url;\n  popupImage.alt = name;\n\n  openModal(popupTypeImage);\n}\n\n// Функция открытия модального окна с карточкой\nfunction openModalNewCard() {\n  openModal(popupNewCard);\n  formNewCard.reset();\n  clearValidation(popupNewCard, validationConfig);\n}\n\n// Функция удаления карточки\nfunction eraseCard(card, cardId) {\n  removeCard(cardId)\n    .then(() => {\n      deleteCard(card);\n    })\n    .catch((err) => {\n      console.log(`Ошибка: ${err}`);\n    });\n}\n\n// Функция открытия модального окна с редактированием профиля\nfunction openModalEditProfile() {\n  inputPopupName.value = profileTitle.textContent;\n  inputPopupDescription.value = profileDescription.textContent;\n\n  clearValidation(popupEditProfile, validationConfig);\n\n  openModal(popupEditProfile);\n}\n\n// Функция сохранения профиля по кнопке \"Сохранить\"\nfunction submitProfileEdit(event) {\n  event.preventDefault();\n\n  const loadingButtonStatus = event.target.querySelector(\".popup__button\");\n\n  renderLoading(true, loadingButtonStatus);\n\n  editUserProfile(inputPopupName.value, inputPopupDescription.value)\n    .then((user) => {\n      editUserProfile(user.name, user.about);\n      closeModal(popupEditProfile);\n    })\n    .catch((err) => {\n      console.log(`Ошибка: ${err}`);\n    })\n    .finally(() => {\n      renderLoading(false, loadingButtonStatus);\n    });\n}\n\n// Функция создания новой карточки по кнопке \"Сохранить\"\nfunction submitNewCard(event) {\n  event.preventDefault();\n\n  const loadingButtonStatus = event.target.querySelector(\".popup__button\");\n\n  renderLoading(true, loadingButtonStatus);\n\n  addNewCard(inputCardName.value, inputCardUrl.value)\n    .then((card) => {\n      const newCard = createCard(\n        card,\n        card.owner._id,\n        eraseCard,\n        likeCard,\n        zoomCard\n      );\n      cardList.prepend(newCard);\n      closeModal(popupNewCard);\n      formNewCard.reset();\n    })\n    .catch((err) => {\n      console.log(`Ошибка: ${err}`);\n    })\n    .finally(() => {\n      renderLoading(false, loadingButtonStatus);\n    });\n}\n\n// Функция открытия модального окна с изменением аватара пользователя\nfunction openModalEditUserAvatar() {\n  openModal(popupTypeAvatar);\n  formUserAvatar.reset();\n  clearValidation(popupTypeAvatar, validationConfig);\n}\n\n// Функция изменения аватара пользователя по кнопке \"Сохранить\"\nfunction submitUserAvatar(event) {\n  event.preventDefault();\n\n  const avatarUrl = inputUserAvatar.value;\n  const loadingButtonStatus = event.target.querySelector(\".popup__button\");\n\n  userAvatar.setAttribute(\"style\", `background-image: url(${avatarUrl});`);\n\n  renderLoading(true, loadingButtonStatus);\n\n  editUserAvatar(avatarUrl)\n    .then((user) => {\n      editUserAvatar(user.avatar);\n      closeModal(popupTypeAvatar);\n      formUserAvatar.reset();\n    })\n    .catch((err) => {\n      console.log(`Ошибка: ${err}`);\n    })\n    .finally(() => {\n      renderLoading(false, loadingButtonStatus);\n    });\n}\n\n// Функция добавления карточки в массив карточек\nfunction addCard(card) {\n  cardList.append(card);\n}\n\n// Вывод данных пользователя и карточек с сервера\nPromise.all(promises)\n  .then((element) => {\n    renderProfile(element[0], userData);\n    element[1].forEach((elem) => {\n      addCard(createCard(elem, element[0]._id, eraseCard, likeCard, zoomCard));\n    });\n  })\n  .catch((err) => {\n    console.log(`Ошибка: ${err}`);\n  });\n\n// Открытие модального окна редактирования профиля и добавления новых карточек по клику\neditProfileButton.addEventListener(\"click\", openModalEditProfile);\naddProfileButton.addEventListener(\"click\", openModalNewCard);\nuserAvatar.addEventListener(\"click\", openModalEditUserAvatar);\n\n// Обработка кнопки \"Сохранить\" модального окна\npopupEditProfile.addEventListener(\"submit\", submitProfileEdit);\npopupNewCard.addEventListener(\"submit\", submitNewCard);\npopupTypeAvatar.addEventListener(\"submit\", submitUserAvatar);\n"],"names":["config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","editUserProfile","name","about","fetch","method","body","JSON","stringify","then","editUserAvatar","avatar","addLike","id","removeLike","cardTemplate","document","querySelector","content","createCard","cardData","userID","deleteCard","likeCard","zoomCard","currentCard","cloneNode","cardImage","cardTitle","cardDeleteButton","cardLikeButton","likeCount","textContent","src","link","alt","likes","length","owner","_id","addEventListener","setAttribute","some","likedUser","classList","add","event","cardId","target","contains","card","toggle","catch","err","console","log","openModal","popup","closeModalEsc","closeModalOverlay","closeModalCloseButton","closeModal","remove","removeEventListener","key","closest","hideInputError","formElement","inputElement","validationConfig","errorElement","inputErrorClas","errorClass","setCustomValidity","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","formSelector","inputErrorClass","patternMismatch","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","userData","userName","userAbout","userAvatar","promises","cardList","profile","profileTitle","profileDescription","addProfileButton","editProfileButton","popupEditProfile","popupTypeAvatar","inputPopupName","inputPopupDescription","popupNewCard","formNewCard","inputCardName","inputCardUrl","popupTypeImage","popupImage","popupCaption","inputUserAvatar","formUserAvatar","renderLoading","isLoading","element","url","eraseCard","all","user","renderProfile","elem","append","value","reset","preventDefault","loadingButtonStatus","finally","newCard","prepend","avatarUrl"],"sourceRoot":""}